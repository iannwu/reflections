What happens when you initialize a repository? Why do you need to do it?
- The reason to initialize a repository is to create a place to store/track the history of the repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?
- Staging area is just for adding/removing files before making a commit while working directory is where we actually create/edit files within the repository.

How can you use the staging area to make sure you have one commit per logical change?
- We can use git diff and git add to control how we want to do our staging/commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- Branches can help to organize major changes or features into easily accessible branches. It also helps when we are switching the context of the work.

How do the diagrams help you visualize the branch structure?
- The diagrams really help me understand the concept of reachibility - that some commits can be invisible to people who are on other branches.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
- All the changed made are combined.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
- Manual merging allows us to resolve code conflicts while auto merging merges branches quickly when no conflicts are found.